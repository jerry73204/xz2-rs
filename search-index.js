var searchIndex = JSON.parse('{\
"lzma_sys":{"doc":"","i":[[3,"lzma_allocator","lzma_sys","",null,null],[12,"alloc","","",0,null],[12,"free","","",0,null],[12,"opaque","","",0,null],[3,"lzma_stream","","",null,null],[12,"next_in","","",1,null],[12,"avail_in","","",1,null],[12,"total_in","","",1,null],[12,"next_out","","",1,null],[12,"avail_out","","",1,null],[12,"total_out","","",1,null],[12,"allocator","","",1,null],[3,"lzma_filter","","",null,null],[12,"id","","",2,null],[12,"options","","",2,null],[3,"lzma_mt","","",null,null],[12,"flags","","",3,null],[12,"threads","","",3,null],[12,"block_size","","",3,null],[12,"timeout","","",3,null],[12,"preset","","",3,null],[12,"filters","","",3,null],[12,"check","","",3,null],[3,"lzma_options_lzma","","",null,null],[12,"dict_size","","",4,null],[12,"preset_dict","","",4,null],[12,"preset_dict_size","","",4,null],[12,"lc","","",4,null],[12,"lp","","",4,null],[12,"pb","","",4,null],[12,"mode","","",4,null],[12,"nice_len","","",4,null],[12,"mf","","",4,null],[12,"depth","","",4,null],[3,"lzma_stream_flags","","",null,null],[12,"version","","",5,null],[12,"backward_size","","",5,null],[12,"check","","",5,null],[3,"lzma_options_bcj","","",null,null],[12,"start_offset","","",6,null],[4,"lzma_internal","","",null,null],[5,"lzma_code","","",null,null],[5,"lzma_end","","",null,null],[5,"lzma_get_progress","","",null,null],[5,"lzma_memusage","","",null,null],[5,"lzma_memlimit_get","","",null,null],[5,"lzma_memlimit_set","","",null,null],[5,"lzma_easy_encoder_memusage","","",null,null],[5,"lzma_easy_decoder_memusage","","",null,null],[5,"lzma_easy_encoder","","",null,null],[5,"lzma_easy_buffer_encode","","",null,null],[5,"lzma_stream_encoder","","",null,null],[5,"lzma_stream_encoder_mt_memusage","","",null,null],[5,"lzma_stream_encoder_mt","","",null,null],[5,"lzma_alone_encoder","","",null,null],[5,"lzma_stream_buffer_bound","","",null,null],[5,"lzma_stream_buffer_encode","","",null,null],[5,"lzma_stream_decoder","","",null,null],[5,"lzma_auto_decoder","","",null,null],[5,"lzma_alone_decoder","","",null,null],[5,"lzma_stream_buffer_decode","","",null,null],[5,"lzma_check_is_supported","","",null,null],[5,"lzma_check_size","","",null,null],[5,"lzma_crc32","","",null,null],[5,"lzma_crc64","","",null,null],[5,"lzma_get_check","","",null,null],[5,"lzma_filter_encoder_is_supported","","",null,null],[5,"lzma_filter_decoder_is_supported","","",null,null],[5,"lzma_filters_copy","","",null,null],[5,"lzma_raw_encoder_memusage","","",null,null],[5,"lzma_raw_decoder_memusage","","",null,null],[5,"lzma_raw_encoder","","",null,null],[5,"lzma_raw_decoder","","",null,null],[5,"lzma_filters_update","","",null,null],[5,"lzma_raw_buffer_encode","","",null,null],[5,"lzma_raw_buffer_decode","","",null,null],[5,"lzma_properties_size","","",null,null],[5,"lzma_properties_encode","","",null,null],[5,"lzma_properties_decode","","",null,null],[5,"lzma_physmem","","",null,null],[5,"lzma_cputhreads","","",null,null],[5,"lzma_stream_header_encode","","",null,null],[5,"lzma_stream_footer_encode","","",null,null],[5,"lzma_stream_header_decode","","",null,null],[5,"lzma_stream_footer_decode","","",null,null],[5,"lzma_stream_flags_compare","","",null,null],[5,"lzma_version_number","","",null,null],[5,"lzma_version_string","","",null,null],[5,"lzma_vli_encode","","",null,null],[5,"lzma_vli_decode","","",null,null],[5,"lzma_vli_size","","",null,null],[5,"lzma_lzma_preset","","",null,null],[5,"lzma_mf_is_supported","","",null,null],[6,"lzma_bool","","",null,null],[6,"lzma_ret","","",null,null],[6,"lzma_action","","",null,null],[6,"lzma_check","","",null,null],[6,"lzma_vli","","",null,null],[6,"lzma_mode","","",null,null],[6,"lzma_match_finder","","",null,null],[17,"LZMA_OK","","",null,null],[17,"LZMA_STREAM_END","","",null,null],[17,"LZMA_NO_CHECK","","",null,null],[17,"LZMA_UNSUPPORTED_CHECK","","",null,null],[17,"LZMA_GET_CHECK","","",null,null],[17,"LZMA_MEM_ERROR","","",null,null],[17,"LZMA_MEMLIMIT_ERROR","","",null,null],[17,"LZMA_FORMAT_ERROR","","",null,null],[17,"LZMA_OPTIONS_ERROR","","",null,null],[17,"LZMA_DATA_ERROR","","",null,null],[17,"LZMA_BUF_ERROR","","",null,null],[17,"LZMA_PROG_ERROR","","",null,null],[17,"LZMA_RUN","","",null,null],[17,"LZMA_SYNC_FLUSH","","",null,null],[17,"LZMA_FULL_FLUSH","","",null,null],[17,"LZMA_FULL_BARRIER","","",null,null],[17,"LZMA_FINISH","","",null,null],[17,"LZMA_CHECK_NONE","","",null,null],[17,"LZMA_CHECK_CRC32","","",null,null],[17,"LZMA_CHECK_CRC64","","",null,null],[17,"LZMA_CHECK_SHA256","","",null,null],[17,"LZMA_MODE_FAST","","",null,null],[17,"LZMA_MODE_NORMAL","","",null,null],[17,"LZMA_MF_HC3","","",null,null],[17,"LZMA_MF_HC4","","",null,null],[17,"LZMA_MF_BT2","","",null,null],[17,"LZMA_MF_BT3","","",null,null],[17,"LZMA_MF_BT4","","",null,null],[17,"LZMA_TELL_NO_CHECK","","",null,null],[17,"LZMA_TELL_UNSUPPORTED_CHECK","","",null,null],[17,"LZMA_TELL_ANY_CHECK","","",null,null],[17,"LZMA_IGNORE_CHECK","","",null,null],[17,"LZMA_CONCATENATED","","",null,null],[17,"LZMA_PRESET_DEFAULT","","",null,null],[17,"LZMA_PRESET_LEVEL_MASK","","",null,null],[17,"LZMA_PRESET_EXTREME","","",null,null],[17,"LZMA_DICT_SIZE_MIN","","",null,null],[17,"LZMA_DICT_SIZE_DEFAULT","","",null,null],[17,"LZMA_LCLP_MIN","","",null,null],[17,"LZMA_LCLP_MAX","","",null,null],[17,"LZMA_LC_DEFAULT","","",null,null],[17,"LZMA_LP_DEFAULT","","",null,null],[17,"LZMA_PB_MIN","","",null,null],[17,"LZMA_PB_MAX","","",null,null],[17,"LZMA_PB_DEFAULT","","",null,null],[17,"LZMA_BACKWARD_SIZE_MIN","","",null,null],[17,"LZMA_BACKWARD_SIZE_MAX","","",null,null],[17,"LZMA_VLI_MAX","","",null,null],[17,"LZMA_VLI_UNKNOWN","","",null,null],[17,"LZMA_VLI_BYTES_MAX","","",null,null],[17,"LZMA_FILTER_X86","","",null,null],[17,"LZMA_FILTER_POWERPC","","",null,null],[17,"LZMA_FILTER_IA64","","",null,null],[17,"LZMA_FILTER_ARM","","",null,null],[17,"LZMA_FILTER_ARMTHUMB","","",null,null],[17,"LZMA_FILTER_SPARC","","",null,null],[17,"LZMA_FILTER_LZMA1","","",null,null],[17,"LZMA_FILTER_LZMA2","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"clone","","",4,[[],["lzma_options_lzma",3]]]],"p":[[3,"lzma_allocator"],[3,"lzma_stream"],[3,"lzma_filter"],[3,"lzma_mt"],[3,"lzma_options_lzma"],[3,"lzma_stream_flags"],[3,"lzma_options_bcj"],[4,"lzma_internal"]]},\
"xz2":{"doc":"LZMA/XZ encoding and decoding streams","i":[[0,"stream","xz2","Raw in-memory LZMA streams.",null,null],[3,"Stream","xz2::stream","Representation of an in-memory LZMA encoding or decoding…",null,null],[3,"LzmaOptions","","Options that can be used to configure how LZMA encoding…",null,null],[3,"MtStreamBuilder","","Builder to create a multi-threaded stream encoder.",null,null],[3,"Filters","","A custom chain of filters to configure an encoding stream.",null,null],[4,"Action","","The `action` argument for `process`,",null,null],[13,"Run","","Continue processing",0,null],[13,"SyncFlush","","Make all the input available at output",0,null],[13,"FullFlush","","Finish encoding of the current block.",0,null],[13,"FullBarrier","","Finish encoding of the current block.",0,null],[13,"Finish","","Finish the current operation",0,null],[4,"Status","","Return value of a `process` operation.",null,null],[13,"Ok","","Operation completed successfully.",1,null],[13,"StreamEnd","","End of stream was reached.",1,null],[13,"GetCheck","","If the TELL_ANY_CHECK flags is specified when constructing…",1,null],[13,"MemNeeded","","An error has not been encountered, but no progress is…",1,null],[4,"Error","","Possible error codes that can be returned from a…",null,null],[13,"Data","","The underlying data was corrupt.",2,null],[13,"Options","","Invalid or unsupported options were specified.",2,null],[13,"Format","","File format wasn\'t recognized.",2,null],[13,"MemLimit","","Memory usage limit was reached.",2,null],[13,"Mem","","Memory couldn\'t be allocated.",2,null],[13,"Program","","A programming error was encountered.",2,null],[13,"NoCheck","","The `TELL_NO_CHECK` flag was specified and no integrity…",2,null],[13,"UnsupportedCheck","","The `TELL_UNSUPPORTED_CHECK` flag was specified and no…",2,null],[4,"Check","","Possible integrity checks that can be part of a .xz stream.",null,null],[13,"None","","",3,null],[13,"Crc32","","",3,null],[13,"Crc64","","",3,null],[13,"Sha256","","",3,null],[4,"Mode","","Compression modes",null,null],[13,"Fast","","Fast compression.",4,null],[13,"Normal","","Normal compression.",4,null],[4,"MatchFinder","","Match finders",null,null],[13,"HashChain3","","Hash Chain with 2- and 3-byte hashing",5,null],[13,"HashChain4","","Hash Chain with 2-, 3-, and 4-byte hashing",5,null],[13,"BinaryTree2","","Binary Tree with 2-byte hashing",5,null],[13,"BinaryTree3","","Binary Tree with 2- and 3-byte hashing",5,null],[13,"BinaryTree4","","Binary Tree with 2-, 3-, and 4-byte hashing",5,null],[17,"TELL_ANY_CHECK","","A flag passed when initializing a decoder, causes…",null,null],[17,"TELL_NO_CHECK","","A flag passed when initializing a decoder, causes…",null,null],[17,"TELL_UNSUPPORTED_CHECK","","A flag passed when initializing a decoder, causes…",null,null],[17,"IGNORE_CHECK","","A flag passed when initializing a decoder, causes the…",null,null],[17,"CONCATENATED","","A flag passed when initializing a decoder, indicates that…",null,null],[11,"new_easy_encoder","","Initialize .xz stream encoder using a preset number",6,[[["check",4]],[["result",4],["error",4],["stream",3]]]],[11,"new_lzma_encoder","","Initialize .lzma encoder (legacy file format)",6,[[["lzmaoptions",3]],[["result",4],["error",4],["stream",3]]]],[11,"new_stream_encoder","","Initialize .xz Stream encoder using a custom filter chain",6,[[["check",4],["filters",3]],[["result",4],["error",4],["stream",3]]]],[11,"new_stream_decoder","","Initialize a .xz stream decoder.",6,[[],[["result",4],["error",4],["stream",3]]]],[11,"new_lzma_decoder","","Initialize a .lzma stream decoder.",6,[[],[["result",4],["error",4],["stream",3]]]],[11,"new_auto_decoder","","Initialize a decoder which will choose a stream/lzma…",6,[[],[["result",4],["error",4],["stream",3]]]],[11,"process","","Processes some data from input into an output buffer.",6,[[["action",4]],[["result",4],["error",4],["status",4]]]],[11,"process_vec","","Performs the same data as `process`, but places output…",6,[[["vec",3],["action",4]],[["result",4],["error",4],["status",4]]]],[11,"total_in","","Returns the total amount of input bytes consumed by this…",6,[[]]],[11,"total_out","","Returns the total amount of bytes produced by this stream.",6,[[]]],[11,"memlimit","","Get the current memory usage limit.",6,[[]]],[11,"set_memlimit","","Set the current memory usage limit.",6,[[],[["error",4],["result",4]]]],[11,"new_preset","","Creates a new blank set of options for encoding.",7,[[],[["lzmaoptions",3],["result",4],["error",4]]]],[11,"dict_size","","Configures the dictionary size, in bytes",7,[[],["lzmaoptions",3]]],[11,"literal_context_bits","","Configures the number of literal context bits.",7,[[],["lzmaoptions",3]]],[11,"literal_position_bits","","Configures the number of literal position bits.",7,[[],["lzmaoptions",3]]],[11,"position_bits","","Configures the number of position bits.",7,[[],["lzmaoptions",3]]],[11,"mode","","Configures the compression mode.",7,[[["mode",4]],["lzmaoptions",3]]],[11,"nice_len","","Configures the nice length of a match.",7,[[],["lzmaoptions",3]]],[11,"match_finder","","Configures the match finder ID.",7,[[["matchfinder",4]],["lzmaoptions",3]]],[11,"depth","","Maximum search depth in the match finder.",7,[[],["lzmaoptions",3]]],[11,"is_supported","","Test if this check is supported in this build of liblzma.",3,[[]]],[11,"is_supported","","Test if this match finder is supported in this build of…",5,[[]]],[11,"new","","Creates a new filter chain with no filters.",8,[[],["filters",3]]],[11,"lzma1","","Add an LZMA1 filter.",8,[[["lzmaoptions",3]],["filters",3]]],[11,"lzma2","","Add an LZMA2 filter.",8,[[["lzmaoptions",3]],["filters",3]]],[11,"x86","","Add a filter for x86 binaries.",8,[[],["filters",3]]],[11,"powerpc","","Add a filter for PowerPC binaries.",8,[[],["filters",3]]],[11,"ia64","","Add a filter for IA-64 (itanium) binaries.",8,[[],["filters",3]]],[11,"arm","","Add a filter for ARM binaries.",8,[[],["filters",3]]],[11,"arm_thumb","","Add a filter for ARM-Thumb binaries.",8,[[],["filters",3]]],[11,"sparc","","Add a filter for SPARC binaries.",8,[[],["filters",3]]],[11,"new","","Creates a new blank builder to create a multithreaded…",9,[[],["mtstreambuilder",3]]],[11,"threads","","Configures the number of worker threads to use",9,[[]]],[11,"block_size","","Configures the maximum uncompressed size of a block",9,[[]]],[11,"timeout_ms","","Timeout to allow `process` to return early",9,[[]]],[11,"preset","","Compression preset (level and possible flags)",9,[[]]],[11,"filters","","Configure a custom filter chain",9,[[["filters",3]]]],[11,"check","","Configures the integrity check type",9,[[["check",4]]]],[11,"memusage","","Calculate approximate memory usage of multithreaded .xz…",9,[[]]],[11,"encoder","","Initialize multithreaded .xz stream encoder.",9,[[],[["result",4],["error",4],["stream",3]]]],[0,"bufread","xz2","I/O streams for wrapping `BufRead` types as…",null,null],[3,"XzEncoder","xz2::bufread","An xz encoder, or compressor.",null,null],[3,"XzDecoder","","A xz decoder, or decompressor.",null,null],[11,"new","","Creates a new encoder which will read uncompressed data…",10,[[],["xzencoder",3]]],[11,"new_stream","","Creates a new encoder with a custom `Stream`.",10,[[["stream",3]],["xzencoder",3]]],[11,"get_ref","","Acquires a reference to the underlying stream",10,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",10,[[]]],[11,"into_inner","","Consumes this encoder, returning the underlying reader.",10,[[]]],[11,"total_out","","Returns the number of bytes produced by the compressor…",10,[[]]],[11,"total_in","","Returns the number of bytes consumed by the compressor…",10,[[]]],[11,"new","","Creates a new decoder which will decompress data read from…",11,[[],["xzdecoder",3]]],[11,"new_multi_decoder","","Creates a new decoder which will decompress data read from…",11,[[],["xzdecoder",3]]],[11,"new_stream","","Creates a new decoder with a custom `Stream`.",11,[[["stream",3]],["xzdecoder",3]]],[11,"get_ref","","Acquires a reference to the underlying stream",11,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",11,[[]]],[11,"into_inner","","Consumes this decoder, returning the underlying reader.",11,[[]]],[11,"total_in","","Returns the number of bytes that the decompressor has…",11,[[]]],[11,"total_out","","Returns the number of bytes that the decompressor has…",11,[[]]],[0,"read","xz2","Reader-based compression/decompression streams",null,null],[3,"XzEncoder","xz2::read","A compression stream which wraps an uncompressed stream of…",null,null],[3,"XzDecoder","","A decompression stream which wraps a compressed stream of…",null,null],[11,"new","","Create a new compression stream which will compress at the…",12,[[],["xzencoder",3]]],[11,"new_stream","","Creates a new encoder with a custom `Stream`.",12,[[["stream",3]],["xzencoder",3]]],[11,"get_ref","","Acquires a reference to the underlying stream",12,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",12,[[]]],[11,"into_inner","","Unwrap the underlying writer, finishing the compression…",12,[[]]],[11,"total_out","","Returns the number of bytes produced by the compressor…",12,[[]]],[11,"total_in","","Returns the number of bytes consumed by the compressor…",12,[[]]],[11,"new","","Create a new decompression stream, which will read…",13,[[],["xzdecoder",3]]],[11,"new_multi_decoder","","Create a new decompression stream, which will read…",13,[[],["xzdecoder",3]]],[11,"new_stream","","Creates a new decoder with a custom `Stream`.",13,[[["stream",3]],["xzdecoder",3]]],[11,"get_ref","","Acquires a reference to the underlying stream",13,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream",13,[[]]],[11,"into_inner","","Unwrap the underlying writer, finishing the compression…",13,[[]]],[11,"total_out","","Returns the number of bytes produced by the decompressor…",13,[[]]],[11,"total_in","","Returns the number of bytes consumed by the decompressor…",13,[[]]],[0,"write","xz2","Writer-based compression/decompression streams",null,null],[3,"XzEncoder","xz2::write","A compression stream which will have uncompressed data…",null,null],[3,"XzDecoder","","A compression stream which will have compressed data…",null,null],[11,"new","","Create a new compression stream which will compress at the…",14,[[],["xzencoder",3]]],[11,"new_stream","","Create a new encoder which will use the specified `Stream`…",14,[[["stream",3]],["xzencoder",3]]],[11,"get_ref","","Acquires a reference to the underlying writer.",14,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",14,[[]]],[11,"try_finish","","Attempt to finish this output stream, writing out final…",14,[[],["result",6]]],[11,"finish","","Consumes this encoder, flushing the output stream.",14,[[],["result",6]]],[11,"total_out","","Returns the number of bytes produced by the compressor",14,[[]]],[11,"total_in","","Returns the number of bytes consumed by the compressor…",14,[[]]],[11,"new","","Creates a new decoding stream which will decode into `obj`…",15,[[],["xzdecoder",3]]],[11,"new_multi_decoder","","Creates a new decoding stream which will decode into `obj`…",15,[[],["xzdecoder",3]]],[11,"new_stream","","Creates a new decoding stream which will decode all input…",15,[[["stream",3]],["xzdecoder",3]]],[11,"get_ref","","Acquires a reference to the underlying writer.",15,[[]]],[11,"get_mut","","Acquires a mutable reference to the underlying writer.",15,[[]]],[11,"finish","","Unwrap the underlying writer, finishing the compression…",15,[[],["result",6]]],[11,"total_out","","Returns the number of bytes produced by the decompressor",15,[[]]],[11,"total_in","","Returns the number of bytes consumed by the decompressor…",15,[[]]],[11,"from","xz2::stream","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","xz2::bufread","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","xz2::read","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","xz2::write","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"drop","xz2::stream","",6,[[]]],[11,"drop","xz2::write","",14,[[]]],[11,"drop","","",15,[[]]],[11,"clone","xz2::stream","",0,[[],["action",4]]],[11,"clone","","",1,[[],["status",4]]],[11,"clone","","",2,[[],["error",4]]],[11,"clone","","",3,[[],["check",4]]],[11,"clone","","",4,[[],["mode",4]]],[11,"clone","","",5,[[],["matchfinder",4]]],[11,"eq","","",1,[[["status",4]]]],[11,"eq","","",2,[[["error",4]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"read","xz2::bufread","",10,[[],["result",6]]],[11,"read","","",11,[[],["result",6]]],[11,"read","xz2::read","",12,[[],["result",6]]],[11,"read","","",13,[[],["result",6]]],[11,"read","xz2::write","",14,[[],["result",6]]],[11,"read","","",15,[[],["result",6]]],[11,"write","xz2::bufread","",10,[[],["result",6]]],[11,"flush","","",10,[[],["result",6]]],[11,"write","","",11,[[],["result",6]]],[11,"flush","","",11,[[],["result",6]]],[11,"write","xz2::read","",12,[[],["result",6]]],[11,"flush","","",12,[[],["result",6]]],[11,"write","","",13,[[],["result",6]]],[11,"flush","","",13,[[],["result",6]]],[11,"write","xz2::write","",14,[[],["result",6]]],[11,"flush","","",14,[[],["result",6]]],[11,"write","","",15,[[],["result",6]]],[11,"flush","","",15,[[],["result",6]]],[11,"shutdown","xz2::bufread","",10,[[],[["poll",6],["error",3]]]],[11,"shutdown","","",11,[[],[["poll",6],["error",3]]]],[11,"shutdown","xz2::read","",12,[[],[["poll",6],["error",3]]]],[11,"shutdown","","",13,[[],[["poll",6],["error",3]]]],[11,"shutdown","xz2::write","",14,[[],[["poll",6],["error",3]]]],[11,"shutdown","","",15,[[],[["poll",6],["error",3]]]]],"p":[[4,"Action"],[4,"Status"],[4,"Error"],[4,"Check"],[4,"Mode"],[4,"MatchFinder"],[3,"Stream"],[3,"LzmaOptions"],[3,"Filters"],[3,"MtStreamBuilder"],[3,"XzEncoder"],[3,"XzDecoder"],[3,"XzEncoder"],[3,"XzDecoder"],[3,"XzEncoder"],[3,"XzDecoder"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);